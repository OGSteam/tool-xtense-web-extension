name: Release Extensions Packages

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        
    - name: Package.json info
      uses: rexdefuror/read-package-json@v1.3.37

    - name: Build
      run: |
        npm install
        npm version
        gulp

    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.PACKAGE_VERSION }}
        release_name: Version ${{ env.PACKAGE_VERSION }}
        draft: true
        prerelease: false

    - name: Publish Chrome Extension
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/chrome-${{ env.PACKAGE_VERSION }}.zip
        asset_name: chrome-${{ env.PACKAGE_VERSION }}.zip
        asset_content_type: application/zip
        
    - name: Publish Firefox Extension
      uses: actions/upload-release-asset@vlatest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/firefox-${{ env.PACKAGE_VERSION }}.zip
        asset_name: firefox-${{ env.PACKAGE_VERSION }}.zip
        asset_content_type: application/zip
        
    - name: Publish Edge Extension
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/edge-${{ env.PACKAGE_VERSION }}.zip
        asset_name: edge-${{ env.PACKAGE_VERSION }}.zip
        asset_content_type: application/zip

    - uses: eregon/publish-release@1.0.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
