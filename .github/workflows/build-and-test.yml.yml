name: Build and Test Release

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Package.json info
        uses: rexdefuror/read-package-json@v1.0.5

      - name: Build
        run: |
          npm install
          npm run version
          npm run update-headers
          gulp

      - name: Create zip archives
        run: |
        # Cr√©er les archives zip pour chaque navigateur
          cd release/chrome && zip -r ../chrome-${{ env.PACKAGE_VERSION }}.zip . && cd ../..
          cd release/firefox && zip -r ../firefox-${{ env.PACKAGE_VERSION }}.zip . && cd ../..
          cd release/edge && zip -r ../edge-${{ env.PACKAGE_VERSION }}.zip . && cd ../..

      - name: Create Draft GitHub Release
        uses: ncipollo/release-action@v1.16.0
        with:
          name: Xtense ${{ env.PACKAGE_VERSION }}
          draft: true
          prerelease: true
          artifacts: "release/chrome-${{ env.PACKAGE_VERSION }}.zip,release/firefox-${{ env.PACKAGE_VERSION }}.zip,release/edge-${{ env.PACKAGE_VERSION }}.zip"
          artifactContentType: zip
          body: "Version de test - Ne pas publier"
          tag: "dev-${{ env.PACKAGE_VERSION }}"


      - name: Publish to Chrome Store
        continue-on-error: true
        uses: PlasmoHQ/bpp@v3
        with:
          keys: '{"chrome":{"clientId":"${{ secrets.CHROME_CLIENT_ID }}","clientSecret":"${{ secrets.CHROME_CLIENT_SECRET }}","refreshToken":"${{ secrets.CHROME_REFRESH_TOKEN }}","extId":"${{ secrets.TEST_CHROME_EXTENSION_ID }}"}}'
          chrome-file: release/chrome-${{ env.PACKAGE_VERSION }}.zip
